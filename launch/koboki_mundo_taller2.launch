<!-- Launches Kobuki Gazebo simulation in the world for this assigment -->
<launch>
    <!-- start Gazebo with taller3 world -->
    <!-- Define world -->
    <arg name="taller2_world" default="$(find taller2_RCSV)/worlds/taller2.world"/>
    <arg name="trayec" default="1"/>
    <param name="trayec_py" value="$(arg trayec)"/>

    <group if="$(eval arg('trayec') == 1)">
        <!-- Robot initial pose -->
        <arg name="x" default="0.0"/>
        <arg name="y" default="0.0"/>
        <arg name="z" default="0.01"/>
        <arg name="roll" default="0.0"/>
        <arg name="pitch" default="0.0"/>
        <arg name="yaw" default="$(eval 0.0 * 3.141592 / 180.0)"/>

        <arg name="robot_name" value="kobuki"/>

        <param 
            name="robot_description" 
            command="$(find xacro)/xacro '$(find kobuki_description)/urdf/kobuki_standalone.urdf.xacro'"/>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)"
            args="-x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
                -urdf -param robot_description 
                -model $(arg robot_name)"
                respawn="false">
        </node>    
    </group>

    <group if="$(eval arg('trayec') == 2)">
        <!-- Robot initial pose -->
        <arg name="x" default="1.0"/>
        <arg name="y" default="1.0"/>
        <arg name="z" default="0.01"/>
        <arg name="roll" default="0.0"/>
        <arg name="pitch" default="0.0"/>
        <arg name="yaw" default="$(eval -90.0 * 3.141592 / 180.0)"/>

        <arg name="robot_name" value="kobuki"/>

        <param 
            name="robot_description" 
            command="$(find xacro)/xacro '$(find kobuki_description)/urdf/kobuki_standalone.urdf.xacro'"/>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)"
            args="-x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
                -urdf -param robot_description 
                -model $(arg robot_name)"
                respawn="false">
        </node>    
    </group>

    <group if="$(eval arg('trayec') == 3)">
        <!-- Robot initial pose -->
        <arg name="x" default="-1.0"/>
        <arg name="y" default="-3.5"/>
        <arg name="z" default="0.01"/>
        <arg name="roll" default="0.0"/>
        <arg name="pitch" default="0.0"/>
        <arg name="yaw" default="$(eval -90 * 3.141592 / 180.0)"/>

        <arg name="robot_name" value="kobuki"/>

        <param 
            name="robot_description" 
            command="$(find xacro)/xacro '$(find kobuki_description)/urdf/kobuki_standalone.urdf.xacro'"/>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)"
            args="-x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
                -urdf -param robot_description 
                -model $(arg robot_name)"
                respawn="false">
        </node>    
    </group>

    <!-- The map is here -->
    <arg 
        name="map_file" 
        default="$(find taller4_rycsv)/maps/map_karto.yaml"/>
    <!-- This how we open the map -->
    <node 
        name="map_server" 
        pkg="map_server" 
        type="map_server" 
        args="$(arg map_file)" />

    <!-- Launch Gazebo-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg taller2_world)"/> 
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="paused" value="false"/>
    </include>  
      <!-- Spawn Robot-->

    

    <!-- State Publisher -->
    <node 
        pkg="robot_state_publisher" 
        type="robot_state_publisher" 
        name="robot_state_publisher" 
        output="screen"
    />

    <!-- Broadcaster  -->
    <node 
        pkg="taller2_RCSV" 
        type="trayectory_publisher.py" 
        name="trayectory_publisher" 
        output="screen" />
      <!-- <param name="turtle" type="string" value="turtle1"  -->

    <!-- one class -->
    <!-- <node 
        pkg="taller2_RCSV" 
        type="one_node.py" 
        name="one_broad_list" 
        output="screen"/> -->
    <!-- Rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args=" -d $(find taller2_RCSV)/config/config.rviz"/> 

</launch>